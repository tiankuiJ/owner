<?xml version="1.0" encoding="UTF-8"?>
<configuration>
 <property name="APPName" value="traffic-admin" />
      <contextName>admin</contextName>
	<!-- 打印控制台 -->
	<appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<Pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %logger-%msg%n
			</Pattern>
		</encoder>
	</appender>

	<appender name="rollingAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.home:-.}/admin/default.log</file>  <!-- 当天的日志文件 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.home:-.}/admin/default/default-%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>60</maxHistory>
		</rollingPolicy>
		<encoder><!-- 必须指定，否则不会往文件输出内容 -->
			<pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger -
				%msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<append>true</append>
		<prudent>false</prudent>
	</appender>

	<!-- 打印错误日志 -->
	<appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.home:-.}/admin/error.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.home:-.}/admin/error.%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} %thread %X{invokeNo} %logger
				%msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>500MB</maxFileSize>
		</triggeringPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印错误日志 -->
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>
	<!-- 定义日志的输出方式:输出在文件夹sql/root.log文件中 配置所有类SQL的日志 -->
	<appender name="rootRollingSql"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.home:-.}/admin/sql/sql.log</file>

		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${log.home:-.}/admin/sql/sql.%i.log.zip
			</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>3</maxIndex>
		</rollingPolicy>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss} %-5level %logger.%M - %msg%n
			</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>500MB</maxFileSize>
		</triggeringPolicy>
	</appender>

	<logger name="org.springframework" level="INFO" />
	<logger name="TRAFFICADMIN" level="INFO" additivity="false">
	    <appender-ref ref="Console" />
		<appender-ref ref="CoreLoggerAppender"></appender-ref>
		<appender-ref ref="errorAppender"></appender-ref>
	</logger>
	<!--log4jdbc begin -->

	<!-- jdbc.sqlonly不显示sql执行的时间 jdbc.sqltiming显示sql执行的时间{executed in 2 msec}
		二者使用一个即可 <logger name="jdbc.sqlonly" level="INFO" addtivity="false"> <appender-ref
		ref="rootRollingSql"/> </logger> -->
	<logger name="jdbc.sqltiming" level="INFO" additivity="false">
		<appender-ref ref="rootRollingSql" />
	</logger>
	<logger name="jdbc.audit" level="OFF" additivity="false" />
	<logger name="jdbc.resultset" level="OFF" additivity="false"></logger>
	<logger name="jdbc.sqlonly" level="OFF" additivity="false"></logger>
	<logger name="jdbc.connection" level="OFF" additivity="false"></logger>
	<!--log4jdbc end -->
	<!-- <logger name="com.ibatis" level="DEBUG" /> <logger name="com.ibatis.common.jdbc.SimpleDataSource"
		level="DEBUG" /> <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG"
		/> <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG"
		/> <logger name="java.sql.Connection" level="DEBUG" /> <logger name="java.sql.Statement"
		level="DEBUG" /> <logger name="java.sql.PreparedStatement" level="DEBUG"
		/> -->
	<logger name="org.springframework" level="INFO" />
	
<!-- 	<logger name="com.ibatis" level="DEBUG" />  
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />  
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />  
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />  
	<logger name="java.sql.Connection" level="DEBUG" />  
	<logger name="java.sql.Statement" level="DEBUG" />  
	<logger name="java.sql.PreparedStatement" level="DEBUG" /> 
	
	<logger name="com.ibatis" level="DEBUG" />  
	<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />  
	<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />  
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />  
	<logger name="java.sql.Connection" level="DEBUG" />  
	<logger name="java.sql.Statement" level="DEBUG" />  
	<logger name="java.sql.PreparedStatement" level="DEBUG" />  -->
	
	
	<root>
		<level value="INFO" />
		<appender-ref ref="Console" />
		<appender-ref ref="rollingAppender"></appender-ref>
		<appender-ref ref="errorAppender"></appender-ref>
	</root>
	    <logger name="com.ibatis" level="DEBUG" />  
    <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />  
    <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />  
    <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />  
    <logger name="java.sql.Connection" level="DEBUG" />  
    <logger name="java.sql.Statement" level="DEBUG" />  
    <logger name="java.sql.PreparedStatement" level="DEBUG" />  
</configuration>

